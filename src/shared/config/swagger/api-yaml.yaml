openapi: 3.0.0
paths:
  /auth/signin:
    post:
      operationId: AuthController_signin
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /auth/signup:
    post:
      operationId: AuthController_signup
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /auth/google:
    get:
      operationId: GoogleAuthController_signin
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /auth/google/signup:
    get:
      operationId: GoogleAuthController_signup
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /brands:
    post:
      operationId: BrandController_createOne
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBrandDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: BrandController_findAll
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /brands/{name}:
    get:
      operationId: BrandController_find
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    patch:
      operationId: BrandController_update
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBrandDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: BrandController_remove
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /users:
    get:
      operationId: UserController_getSelf
      parameters: []
      responses:
        "200":
          description: ""
  /users/self:
    patch:
      operationId: UserController_editSelf
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditUserDto"
      responses:
        "200":
          description: ""
  /users/{userName}:
    get:
      operationId: UserController_getUserByUsername
      parameters:
        - name: userName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
  /categories:
    post:
      operationId: CategoryController_createOne
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCategoryDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: CategoryController_findAll
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /categories/{name}:
    get:
      operationId: CategoryController_find
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    patch:
      operationId: CategoryController_update
      parameters: 
        - name: name
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCategoryDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: CategoryController_remove
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /types:
    post:
      operationId: TypeController_createOne
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTypeDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: TypeController_findAll
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /types/{name}:
    get:
      operationId: TypeController_find
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    patch:
      operationId: TypeController_update
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTypeDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: TypeController_remove
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /items:
    post:
      operationId: ItemController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateItemDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: ItemController_findAll
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /items/{id}:
    get:
      operationId: ItemController_findById
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    patch:
      operationId: ItemController_update
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateItemDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: ItemController_remove
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /cart:
    post:
      operationId: CartController_addItem
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddItemDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: CartController_getAllItems
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    delete:
      operationId: CartController_empty
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /cart/{item_id}:
    patch:
      operationId: CartController_updateItem
      parameters:
        - name: item_id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateItemDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: CartController_removeItem
      parameters:
        - name: item_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /comments:
    post:
      operationId: CommentsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCommentDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: CommentsController_findAll
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /comments/{parentId}:
    post:
      operationId: CommentsController_createReply
      parameters:
        - name: parentId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCommentDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /comments/{id}:
    patch:
      operationId: CommentsController_update
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCommentDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: CommentsController_remove
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /items/rating/{id}:
    post:
      operationId: ItemRatingController_create
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateItemRatingDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: ItemRatingController_getAvgRating
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /comments/reaction/{id}:
    post:
      operationId: CommentReactionController_create
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCommentReactionDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: CommentReactionController_getReactionsSum
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: number
info:
  title: Internet store application
  description: The Internet store API description
  version: "1.0"
  contact: {}
tags:
  - name: internet-store
    description: ""
servers: []
components:
  schemas:
    SignInDto:
      type: object
      properties:
        email:
          type: string
        userName:
          type: string
        password:
          type: string
      required:
        - email
        - userName
        - password
    AuthDto:
      type: object
      properties:
        email:
          type: string
        userName:
          type: string
        password:
          type: string
      required:
        - email
        - userName
        - password
    CreateBrandDto:
      type: object
      properties:
        name:
          type: string
        websiteUrl:
          type: string
      required:
        - name
        - websiteUrl
    UpdateBrandDto:
      type: object
      properties:
        name:
          type: string
        websiteUrl:
          type: string
    EditUserDto:
      type: object
      properties:
        userName:
          type: string
      required:
        - userName
    CreateCategoryDto:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    UpdateCategoryDto:
      type: object
      properties:
        name:
          type: string
    CreateTypeDto:
      type: object
      properties:
        name:
          type: string
        category_id:
          type: string
      required:
        - name
        - category_id
    UpdateTypeDto:
      type: object
      properties:
        name:
          type: string
        category_id:
          type: string
    CreateItemDto:
      type: object
      properties:
        title:
          type: string
        price:
          type: number
          minimum: 0
        discountPercentage:
          type: number
          minimum: 0
          maximum: 100
        type_id:
          type: string
        brand_id:
          type: string
      required:
        - title
        - price
        - discountPercentage
        - type_id
        - brand_id
    UpdateItemDto:
      type: object
      properties:
        action:
          type: string
          enum:
            - INC
            - DEC
      required:
        - action
    AddItemDto:
      type: object
      properties:
        item_id:
          type: string
      required:
        - item_id
    CreateCommentDto:
      type: object
      properties:
        item_id:
          type: string
        content:
          type: string
      required:
        - item_id
        - content
    UpdateCommentDto:
      type: object
      properties:
        content:
          type: string
      required:
        - content
    CreateItemRatingDto:
      type: object
      properties:
        rating:
          type: number
      required:
        - rating
    CreateCommentReactionDto:
      type: object
      properties:
        reaction:
          type: string
          enum:
            - LIKE
            - DISLIKE
      required:
        - reaction
